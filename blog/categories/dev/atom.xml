<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dev | ]]></title>
  <link href="http://hamxiaoz.github.com/blog/categories/dev/atom.xml" rel="self"/>
  <link href="http://hamxiaoz.github.com/"/>
  <updated>2013-04-09T19:46:07-07:00</updated>
  <id>http://hamxiaoz.github.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Stand Out - Make Emails Readable]]></title>
    <link href="http://hamxiaoz.github.com/blog/2013/01/23/stand-out-make-emails-readable"/>
    <updated>2013-01-23T20:32:00-08:00</updated>
    <id>http://hamxiaoz.github.com/blog/2013/01/23/stand-out-make-emails-readable</id>
    <content type="html"><![CDATA[<p>You must have received emails like this, can you quickly find out what&rsquo;s the latest reply here?</p>

<p><img src="/images/blog/StandOut-before.png" alt="email text before stand out"></p>

<p>I cannot read it. So I build a little tool to help me.</p>

<p>Enter <a href="http://hamxiaoz.com/StandOut/" target="_blank">&ldquo;Stand Out&rdquo;</a>, a web app to make the important information stands out in the email.</p>

<p>It&rsquo;s really easy to use: just paste the email content into the &ldquo;input&rdquo; box and you get a nice result on the right.</p>

<p><img src="/images/blog/StandOut-after.png" alt="email text before stand out"></p>

<p>Why building such an &ldquo;useless&rdquo; thing?</p>

<p>On the other day I was receiving with emails flooded with &ldquo;>"s and &rdquo;>>&ldquo;s. It was a long discussion and people are replying each other. Normally Outlook handles the format nicely if everyone is using the same email format, but it fails when participants use different email formats: such as pure text and rich format text. The email server automatically generates &rdquo;>&ldquo;s and &rdquo;>>&ldquo;s to distinguish old and new replies, but unfortunately the result is not really human readable.</p>

<p><strong>I believe computers/programs should make Haman&rsquo;s life easier.</strong></p>

<p>So I made this.</p>

<p>It&rsquo;s also interesting to mention that there are other computer programs (like <a href="http://www.dsoft.com.tr/stripmail/" target="_blank">StripMail</a>) doing this. But it&rsquo;s 2013 now, who wants to download and install an exe?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Joy of Coding]]></title>
    <link href="http://hamxiaoz.github.com/blog/2013/01/16/the-joy-of-coding"/>
    <updated>2013-01-16T21:44:00-08:00</updated>
    <id>http://hamxiaoz.github.com/blog/2013/01/16/the-joy-of-coding</id>
    <content type="html"><![CDATA[<p>So you had a project.</p>

<p>You scratched your head a couple of days and came up a really nice and robust design.</p>

<p>&ldquo;The design solves the problems now and it should be able to handle future changes.&rdquo; You thought that.</p>

<p>You finished the project, it worked and everyone was happy.</p>

<p>Two years later, the &lsquo;future&rsquo; has came.</p>

<p>Now you have a new requirement, and you find out that the thing that your code relies on is changed.</p>

<p>Will it break your code?</p>

<p>It turns out the code you wrote can handle the new requirement, with very little changes.</p>

<p>You &lsquo;saved&rsquo; the future.</p>

<p>That&rsquo;s the joy of coding.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working with C#, C++/CLI and Managed C++]]></title>
    <link href="http://hamxiaoz.github.com/blog/2013/01/14/working-with-c-number"/>
    <updated>2013-01-14T23:07:00-08:00</updated>
    <id>http://hamxiaoz.github.com/blog/2013/01/14/working-with-c-number</id>
    <content type="html"><![CDATA[<p>Recently I spent nearly 2 months working on a windows project mixing different languages such as C#, C++/CLI, Managed C++. Here is what I feel:</p>

<ul>
<li><p>Writing in C# is more fun and efficient (developing time, not execution time). You can use automatic property, anonymous function with lambda expression and LINQ. The code is more concise and expressive.</p></li>
<li><p>C++/CLI is really great to mix native type and managed type together. But sometimes it takes too much brain energy (or think about) to jump between the two worlds. Also, I don&rsquo;t really like way that the generated UI code is in the same file as the header file, it makes the header file a really mess! Anyway, here are some useful resources/tips I can share:</p>

<ul>
<li><a href="http://manski.net/2011/04/19/cpp-cli-cheat-sheet/">C++/CLI Cheat Sheet</a></li>
<li><a href="http://www.amazon.com/CLI-Action-Manning-Nishant-Sivakumar/dp/1932394818">C++/CLI in Action</a></li>
<li><a href="http://www.ecma-international.org/publications/standards/Ecma-372.htm">Standard ECMA-372: C++/CLI Language Specification</a></li>
<li>For C# developers, don&rsquo;t forget that you can and you should use C++ Interop instead P/Invoke. It provides better performance.</li>
</ul>
</li>
<li><p>Managed C++: I&rsquo;m really happy Microsoft has deprecated them. It&rsquo;s the predecessor of C++/CLI and has all those weird syntax: __gc, __box and confusing symbols: * for both native and managed type. Coding between it and C++/CLI is really a brain f**k. At a point, I have to convert one project from Managed C++ to C++/CLI to really gets speed up. The conversion process is not as slow as I thought, largely due to the power of VIM (there is a nice Visual Studio extension <a href="http://www.viemu.com/">ViEmu</a>) and some regex magic.</p></li>
</ul>


<p>For new applications, I&rsquo;d suggest the following stack:</p>

<ul>
<li><p>(If necessary) use C++/CLI to interop with native C++ libraries and provide core functionality for the program.</p></li>
<li><p>Use C# to code the UI part.</p></li>
<li><p>Code the application&rsquo;s core part first, make it work <em>without</em> any GUI: it seperates the business logic and makes the code more testable.</p></li>
<li><p>Use data binding, don&rsquo;t code too much event handler in your GUI.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solution for LNK2028 & LNK2019 in C++/CLI projects]]></title>
    <link href="http://hamxiaoz.github.com/blog/2011/09/27/solution-for-lnk2028-lnk2019-in-c-cli-projects"/>
    <updated>2011-09-27T17:41:21-07:00</updated>
    <id>http://hamxiaoz.github.com/blog/2011/09/27/solution-for-lnk2028-lnk2019-in-c-cli-projects</id>
    <content type="html"><![CDATA[<p>Short version:<br /><strong>link to your lib file.</strong></p>


<p>&#13;</p>

<p><br />Long version:<br />A recent project I'm working on requires me to make a plugin for a native C++ application. So I need to create a dll that exposes C functions thru dllexport. As a .Net guy, I've my business model and UI written in .Net and a C++/CLI project serves as a glue project between .net and the native C++ application. The solution looks like this:</p>


<p>&#13;</p>

<p><br />- plugin.dll (C++/CLI, used by native C++ application, depends on businesslogic.dll)<br />- businesslogic.dll (C++/CLI, contains a native C++ class that will get called by plugin.dll)<br />- ui.dll (C#, used by businesslogic.dll)</p>


<p>&#13;</p>

<p><br />After coding everything, I find out that all dll compiles fine except pluging.dll: it complains about LINK2028 &amp; LNK2019. I know the linker error usually tells me that something is missing its definition. But I'm still scratching my head because A: I have the header file included and B: I have the dll added to the project reference. In .net the project should build fine. But it turns out that since businesslogic.dll is a mixed dll, to use with plugin.dll, I should also link to the businesslogic.lib file.<br /><br />It took me about 30 minutes to figure out that I need to link to the lib file of my own C++/CLI project. I know, I'm not that familiar with native programming. Anyway, if you google "LNK2028" you'll find a lot of questions asked, either with no answer or answers doesn't make sence. So I'd like to share this post with everyone, hopefully can save someone's time. (especially .net programmer)<br /><br />BTW: <a href="http://stackoverflow.com/questions/5683710/wstring-lpcwstr-in-shellexecute-give-me-error-lnk2028-lnk2019">here </a>is a similar error with the same solution.</p>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Don't have time doing the online BMW service survey? There is a script for you.]]></title>
    <link href="http://hamxiaoz.github.com/blog/2011/09/21/dont-have-time-doing-the-online-bmw-service-survey"/>
    <updated>2011-09-21T22:52:00-07:00</updated>
    <id>http://hamxiaoz.github.com/blog/2011/09/21/dont-have-time-doing-the-online-bmw-service-survey</id>
    <content type="html"><![CDATA[<p>I did a service for my bimmer. The service was great and few days later I get an email asking for a survey. It's a one page survey but I'm programmer (read "lazy") and I want to write some javascript code to learn javascript (I mentioned it's time to learn javascript <a href="http://hamxiaoz.tumblr.com/post/10266766635/whats-the-common-thing-between-c-and-javascript">here</a>), so here is the script:</p>


<p>&#13;</p>

<pre><span>// ==UserScript==</span>&#13;
<span>// @name           BMW Service Survey All 10</span>&#13;
<span>// @namespace      hamxiaoz</span>&#13;
<span>// @author         hamxiaoz</span>&#13;
<span>// @copyright      2011, hamxiaoz (http://userscripts.org/users/355416)</span>&#13;
<span>// @licence        Summary: Free for personal non-commercial use</span>&#13;
<span>// @description    Automatically fill up survey with awesome (rate 10) feedback</span>&#13;
<span>// @version        2011.09.21</span>&#13;
<span>// @include        http://www.bmwcustomerexperience.com/survey*</span>&#13;
<span>// ==/UserScript==</span>&#13;
CheckRadioBox(<span>"rdb5"</span>);&#13;
SetSelectIndex(<span>"questionlist1_rptQuestionList_ctl05_ddlQuestionValues"</span>,<span>1</span>); <span>// select "Day I wanted"</span>&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl03_crblQuestionValuesBMW_10"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl06_crblQuestionValuesBMW_10"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl08_crblQuestionValuesBMW_10"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl17_crblQuestionValuesBMW_10"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl19_crblQuestionValuesBMW_10"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl21_crblQuestionValuesBMW_10"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl23_crblQuestionValuesBMW_0"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl25_crblQuestionValuesBMW_10"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl27_crblQuestionValuesBMW_0"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl30_crblQuestionValuesBMW_0"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl31_crblQuestionValuesBMW_10"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl32_crblQuestionValuesBMW_0"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl34_crblQuestionValues_0"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl36_crblQuestionValuesBMW_0"</span>);&#13;
CheckRadioBox(<span>"questionlist1_rptQuestionList_ctl38_crblQuestionValuesBMW_0"</span>);&#13;
alert(<span>"done, time to hit submit."</span>);&#13;
&#13;
<span>function</span> SetSelectIndex(selectId, index)&#13;
{&#13;
    <span>var</span> select = <span>document</span>.getElementById(selectId);&#13;
    <span>if</span>(select != <span>null</span> &amp;&amp; select.type == <span>"select-one"</span>)&#13;
        select.selectedIndex = index;&#13;
}&#13;
&#13;
<span>function</span> CheckRadioBox(rbId)&#13;
{&#13;
    <span>var</span> rb = <span>document</span>.getElementById(rbId);&#13;
    <span>if</span>(rb != <span>null</span> &amp;&amp; rb.type == <span>"radio"</span>)&#13;
        rb.checked = <span>true</span>;&#13;
}&#13;
</pre>


<p>&#13;</p>

<p>The script is pretty simple and straightforward. It finds the highest score radio boxes and selects them.</p>


<p>&#13;</p>

<p>The scripts has been tested under Chrome v14 and Firefox v6.02.</p>


<p>&#13;</p>

<p>You can download and install the script from: </p>


<p>&#13;</p>

<p><a title="http://userscripts.org/scripts/show/113658" href="http://userscripts.org/scripts/show/113658">http://userscripts.org/scripts/show/113658</a></p>


<p>&#13;</p>

<p>UPDATE: I made a bookmarklet, you can drag this</p>


<p>&#13;
&#13;</p>

<p><strong><a href="javascript:CheckRadioBox(&quot;rdb5&quot;);SetSelectIndex(&quot;questionlist1_rptQuestionList_ctl05_ddlQuestionValues&quot;,1); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl03_crblQuestionValuesBMW_10&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl06_crblQuestionValuesBMW_10&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl08_crblQuestionValuesBMW_10&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl17_crblQuestionValuesBMW_10&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl19_crblQuestionValuesBMW_10&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl21_crblQuestionValuesBMW_10&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl23_crblQuestionValuesBMW_0&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl25_crblQuestionValuesBMW_10&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl27_crblQuestionValuesBMW_0&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl30_crblQuestionValuesBMW_0&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl31_crblQuestionValuesBMW_10&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl32_crblQuestionValuesBMW_0&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl34_crblQuestionValues_0&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl36_crblQuestionValuesBMW_0&quot;); CheckRadioBox(&quot;questionlist1_rptQuestionList_ctl38_crblQuestionValuesBMW_0&quot;); alert(&quot;done, time to hit submit.&quot;); function SetSelectIndex(selectId, index) { var select = document.getElementById(selectId); if(select != null &amp;&amp; select.type == &quot;select-one&quot;) select.selectedIndex = index; } function CheckRadioBox(rbId) { var rb = document.getElementById(rbId); if(rb != null &amp;&amp; rb.type == &quot;radio&quot;) rb.checked = true; }">link</a> </strong></p>


<p>&#13;
&#13;</p>

<p>to your toolbar to bookmark the link. When you open the survey page, just click the bookmark to use it.</p>


<p></p>
]]></content>
  </entry>
  
</feed>
